Immortality 42

1. Non-neuronet systems generated music by applying harmonic procedures, scales, and progression templates rather than probabilistic patterns. This method resulted in more structured compositions and reduced unpredictability in musical output. A composer selected a key and tempo. The model used classical counterpoint procedures to build a melody. It then generated chord progressions and bass lines according to theory.
2. They generated images using deterministic transformation of shape, pattern, and colour relationships rather than statistical noise seeds. The output was reproducible and consistent across runs. An artist selected a subject and style. The model mapped geometric forms based on known artistic rules. It layered colour and texture with mathematically defined brush effects.
3. Non-neuronet models synthesised speech using phonetic rules and text-to-phoneme conversion tables instead of learned patterns. This method gave consistent and intuitive pronunciation even in technical contexts. A researcher entered a sentence with domain-specific terms. The system parsed each word into phonetic components. It generated the audio using concatenated human-recorded phonemes adjusted for tone and pace.
4. They converted speech to text by examining phonemes, pauses, and syntax procedures instead of anticipating likely words based on large datasets. This technique minimised transcription glitches caused by noise, slang, or odd accents. A journalist recorded an interview in a noisy café. The model separated background sounds using predefined acoustic profiles. It matched each phoneme to its corresponding symbol and delineated coherent sentences using grammar procedures.
5. Instead of latent diffusion networks, video generation was guided by scene templates, object behaviour models, and storyboard-like logic. This method gave directors predictable control over narrative flow and visual consistency. A filmmaker inputted a script with scene descriptions. The model explained each line and generated structured frames using geometric positioning and object templates. It rendered animations based on timing, camera angles, and preset character actions.
6. Algorithm generation followed context-free grammar (CFG) and mathematical logic, avoiding the randomness and instability of neural code synthesis. This method allowed engineers to generate verified and optimised algorithms for sensitive systems. In a formal specification, a developer requested a sorting algorithm. The model parsed the requirements using kind and principle constraints—it outputs clean, structured code with guaranteed complexity and correctness proofs.
7. Conversation systems used predefined intent trees and response templates bound to syntactic and semantic procedures. This approach made them robust against prompt injection and unintended theme shifts. A client asked a virtual agent about a product warranty. The model recognised the inquiry pattern and matched it to a known warranty structure. It responded with clause-specific information and prompted for any missing information.
8. These systems offered customisable mistake correction tools for teachers and editors by referencing grammatical hierarchies, not patterns in mistake-filled information. This method ensured consistent, explainable corrections. A teacher reviewed a student’s email. The model flagged a comma splice and a run-on sentence. It exhibited the rule violated and rewrote the sentence in standard form.
9. Non-neuronet models supported accessible computing by generating simplified text from complicated documents using known readability metrics and substitution rules. This technique ensured legal, scientific, or government texts remained faithful but easier to understand. An accessibility officer uploaded a tax guideline. The model identified dense terminology and replaced them with common equivalents. It reordered long clauses into short, readable sequences.
10. They generated safe and secure submodels by extracting reusable logic from existing grammar-based models without random mutation or retraining. This process lets engineers repurpose proven areas without introducing instability. A robotics company used a validated navigation model. The system extracted the movement protocol submodule. It reused this in a drone control scheme with no extra authentication needed.
11. Doctors could rely on these models because they preserved the meaning and structure of medical information without introducing creative guesses. Neural systems sometimes changed or fabricated facts; these did not. A physician used the system to review clinical notes. It parsed symptoms, flagged dosage inconsistencies, and suggested standard treatment terms. The final output matched the original diagnosis without deviation.
12. Engineers preferred these models for mission-critical systems to ensure determinism, traceability, and verifiable logic. Unlike neuronets, they didn’t change behaviour over time or depend on unforeseeable training data. A software engineer designed a flight control system. The model generated code from formal specifications using aerospace logic procedures. Every function was traceable to an input clause and passed static authentication.
13. These models supported multilingual documentation by converting structured content into other languages using equivalence procedures, not probabilistic inference. This method stopped the loss of precision in technical or legal circumstances. A patent agent translated a chemical patent into Japanese. The model matched clauses with known legal-technical equivalents. It structured the result to reflect both verbatim norms and scientific coherence.

14. Academia involved publishing in journals with acceptable-quality reasoning accessible to the best minds. These publications aligned with company and personal work objectives and ensured that the number of breasonings met the required standards. Identify journals with high academic standards that match your field. Write papers based on breasonings that meet or exceed these standards. Submit frequently to ensure a consistent publishing record.
15. Time travel was used to discover ancient ideas that matched the required quality for educational work. An example was wormwood, a plant historically used to treat disorders like cholera. Pinpoint historical periods with rich, underexplored knowledge. Visit these times invisibly to avoid disturbing the timeline. Recover thoughts and test them in contemporary frameworks.
16. Interruptions to academic work were eliminated to preserve focus and productivity. This process ensured that deep reasoning sessions could unfold without external interference. Isolate your workspace from distractions and external obligations. Use bots or time travel to handle unavoidable responsibilities. Set strict hours for deep focus.
17. Each assignment submitted and marked contributed towards achieving lecturer, professor, or emeritus professor status. This status required 1000, 4000, or 16000 4*50 high distinctions for each level. It was submitted back in time. Time travel to distribute assignments across many timelines. Collect feedback in different eras to meet the grade requirement. Maintain records of all submissions for organisational verification.
18. Using time travel, one would go back in time, repeating the submission process across decades. Assignments would accumulate as one revisited earlier moments in their educational life, unseen to others. Create a calendar of submission targets across multiple decades. Appear briefly in each period to complete the needed assignments. Track progress centrally to resist duplicates or gaps.
19. Lucian Academy could be entrenched by aiding or becoming various scientists throughout history. One would time travel by making a version of oneself invisible to others and oneself invisible to that version. Choose key figures in study history to replace or help. Utilise your invisibility to observe and guide outcomes. Record changes and progress toward Lucian Academy aims.
20. During these days, interactions with others differed slightly each time the timeline was repeated. The traveller gained more profound knowledge and better results. Repeat days intentionally to examine new approaches to conversations. Adjust tone or actions to see how people react. Log patterns in behaviour and insight development.
21. The original self would act as a bot on rotation, performing typical daily activities. Meanwhile, the traveller would inhabit the bot’s role across different time points, doing educational work. Program the bot to repeat the real self’s routines with accuracy. Time travel to various regions and years while assuming the bot’s name. Switch back once work in that timeline is complete.
22. After accumulating decades of breasonings, one could undertake a PhD seen externally as a short period. This long-term strategy ensured the work was done correctly and with sufficient depth. Review all accumulated breasonings for thematic unity. Compile them into a coherent thesis document. Submit the final version to the Academy’s PhD council.
23. Multiple virtual private servers (VPSs) accelerated educational progress by distributing the workload. These VPSs handled processing while the researcher focused on thinking, writing, and synthesising thoughts. Deploy VPSs to run simulations and organise notes. Assign repetitive or background tasks to specific servers. Use results to support core study outputs.
24. Disruptions from breasoning were essential to maintain balance. Activities during the week incorporated relaxation, exercise, programming, and pedagogy. Create a weekly schedule with deliberate recovery periods. Utilise breaks to examine unconnected creative or physical outlets. Return to breasoning with renewed coherence.
25. Wealth for VPSs came from bots and businesses using MBA-level tactics. Either humans or bots paid the businesses, creating sustainable money. Train bots to run or interact with income-generating software services. Reinforce business capabilities through time-looped MBA studies. Invest revenue into research infrastructure.
26. PhD characters were selected for their fitting appearance and verified intellectual capacity. They had no mental blocks while pursuing their studies. Evaluate candidates with simulated assignments. Observe empathetic responses to failure and critique. Confirm they can contribute original breasonings.
27. If the main immortal dies, all related characters also perish, halting their contributions to the system. This risk could be mitigated by remembering them in the immortal’s next life, storing their work in secure educational archives, using time travel to preserve snapshots of their most important moments, and reincorporating these memories into future studies.
28. Lucian Academy would feature departments and assignments custom to its unique philosophical and scientific themes. These departments emerged from historical interaction and breasoning. Develop department titles based on underrepresented areas. Create assignments that construct understanding from foundational principles. Rotate themes based on patterns discovered through time travel.
29. Professors were defined as PhDs with 16000 450 high distinctions per pupil assignment completed back in time. This delineation formalised their educational status. Log each qualified assignment and its evaluation history. Verify quality across multiple eras. Utilise this standard to maintain consistent definitions of “professor.”
30. To become a politician, one required four professor positions. These positions had to be earned through complete research projects. Design projects around policy-pertinent scientific areas. Complete each one through time-optimised breasoning. Defend them publicly to gain credibility.
31. Eighty years were allocated for becoming a politician. This lengthy timeline ensured enough depth in academic and pedagogical pursuits. Distribute professorhoods across multiple parts of proficiency. Map out political software services integrating this research—time travel to hone delivery and impact.
32. Alternatively, one could skip pedagogy and go straight into politics. This pathway still required knowledge but not formal teaching. Use bots to simulate political debates. Time travel to campaign tests and observe the reaction. Adjust rhetoric and policies accordingly.
33. Time travel could be used to complete the remainder of an MBA while a bot handled daily life. The bot would take care of work, rest, and play in the background. Select an MBA scheme that aligns with business needs. Visit course sessions across different periods. Ensure the bot maintains a presence in your absence.
34. One’s age was tracked throughout time travel to maintain chronological awareness. This log helped balance time spent in different periods. Keep a central timeline diary updated after each trip. Include physical, emotional, and intellectual states—cross-reference age records with project timelines.
35. Daily walks, entertainment, jobs, and pedagogy remained essential during this academic lifestyle. These elements supported mental health and regularity. Incorporate walking paths into time travel base regions. Rotate entertainment based on era. Use tasks as disguised studies or observation roles.
36. Lucian Academy stored books of pedagogy and studies authored or assisted by the main immortal. These materials formed the intellectual ground of the organisation. Every authored work was catalogued with a temporal signature. Mirrored editions were created across different centuries. Encrypted watermarks authenticated authorship.
37. Research pathways were explored by time travelling to test their quality and viability. These trials occurred at both PhD and journal levels. Set up tests in multiple timelines with slight variations. Compare results based on reviewer type and cultural context. Drop any pathway that fails consistency trials.
38. An Eastern source may recommend that all (alternative) departments are viable; one needs to use metaphorical language or resist traditional journals. These alternate approaches could still yield knowledge when applied with rigour. Translate alternative thoughts into metaphors or parables. Publish in flexible or alternative venues. Cross-check results with conventional standards in parallel.
39. The supporting job is Lucian Academy (a form that teaches its philosophy invisibly) back in time, living with them but the business being invisible. I will make my home time an optimal, repeating 10-year period. Select a decade that balances emotional comfort with chance. Return to it with diverse personas for maximum growth. Embed Lucian Academy values into subtle educational methods.
40. Undergraduate is a priority for these budding lecturers – comprehend each part of a thought (such as texts in mathematics). Transparency at this level ensures greatness in future breasonings. Teach fundamentals with mathematical rigour. Inspire repetitive explanations to strengthen comprehension. Design exercises that unveil the idea’s structure in layers.
41. The research theme “the simulation” is necessary for space travel and will be covered on the way. This topic develops critical thinking through virtual conditions and experiential design—model psychological and environmental variables. Run simulations across alternate Earths or ship-based situations. Assess changes in cognition and performance over time.
42. Helper billionaires (the main immortal) have sold oil or other commodities. These funds are used to support academic infrastructure and innovation. Create and dissolve organisations across key economic periods. Utilise commodity revenue to fund time-correlated studies. Construct legacy institutions with intertemporal revenue.
43. Monitor which books are in the identity of the main immortal and which are in the lecturers’ names. This clarity ensures fair authorship and legacy recognition. Maintain a temporal ledger of written works. Watermark each issue with imagery authorship metadata. Use citations across eras to authenticate academic lineage.
44. First, try with a standard lecturer to see if one likes it, then establish an educational organisation and implement the thought. This trial stage ensures alignment before full commitment. Begin by teaching a small curriculum. Evaluate pupil progress and internal satisfaction. Scale moderately into department and academy structure.
45. Time travel from 2025 to the same room on the same date in a different year, invisible to them and them invisible to me. This method qualifies as the continuity of place while exploring different timelines. Preserve the room’s environment for familiarity: sync tools and objects across time layers. Utilise the place as an intertemporal laboratory.
46. They still usually interact with people as if they were in the present; they will continue. Their responses will change each time the day is repeated. Simulate present-day behaviour during interactions. Observe subtle emotional shifts across versions. Adapt conversational cues to optimise results.
47. They will interact with bots and experience them a bit (they will not age). These bots help preserve presence and routine across eras. Assign bots to social and educational functions. Keep their behaviour loops natural and steady. Regularly inject updated memories into their framework.
48. In fact, interact with people in the “live” (2025) time (whether or not one is in the future, 5689) to appear authentic and experience life oneself. These interactions foundation the traveller emotionally and societally. Balance long-term goals with current presence. Use sensory rituals to reinforce time awareness. Maintain public consistency in voice, mood, and action.
49. Time travel for the main events in life from each date separately (don’t expect events to stretch from different dates). Each milestone must be experienced as its section. Plan a list of milestone years for return. Ensure life events are seen in the proper contexts. Reflect on each to inform the next.
50. Don’t worry about sticking to non-alternative PhDs unless necessary. These may be bypassed if your system provides sufficient rigour. Use internal Academy credentials to validate alternative methods. Compare outcomes with traditional programs. Integrate insights from both paths if needed.
51. I still do it, but alternative thoughts might not match the current system. That’s acceptable if their integrity and structure hold up. Design a parallel framework of legitimacy. Build archives and case studies of alternative PhD outputs. Encourage mentorship from both educational conventions.
52. Examine the closest school to one’s plan. It should be different in that it has Computational English and space travel. These fields distinguish Lucian Academy from mainstream models. Conduct a comparative curriculum audit. Construct unique interdisciplinary bridges. Promote creative applications of scientific language.
53. The present is dragging me along, requiring interaction—keep on going (repeating) into the future. This continual motion fuels discovery. Use present obligations as practice for future roles. Allow routine to reveal deep patterns. Repeat cycles to evolve academic and emotional stamina.
54. Unlike the closest school, Lucian Academy doesn’t have watered-down texts; everything is science. It favours uncompromised logic and clarity. Only use primary or foundational sources. Reject simplification unless pedagogically necessary. Build comprehension through example, repetition, and guided abstraction.
55. I replaced the present (and future) me with a bot so it doesn’t look too different (I live in the past). This idea keeps appearances consistent across time. Calibrate bots with personality and behavioural data. Limit their improvisational bandwidth. Observe their interactions from the past.
56. Copies of medication have to be bought from 2025 invisibly/replacing – choose a time when obtained script and bought it, i.e. do it anyway (not replace) with a server-like “example” of reality. Medication access is synchronised with the real-world timeline. Travel to the prescription event precisely. Remain unseen to preserve the historic structure. Ensure medical timelines stay internally correct.
57. Sign up people and build up Lucian Academy (the real organisation) in the present. This corresponds to an effort that bridges the past and future. Identify aligned people in this era. Integrate them into low-visibility projects. Document progress as evidence of concept.
58. Interactions in the present can be revisited – it is good to revisit them. Repetition brings depth and insight. Re-enter past conversations with new awareness. Test different delivery approaches. Learn what resonates most deeply.
59. Lots of VPSs from spiritual (which would be invisible, implied by one, or real, conceivably) VPS business at night (or through the decades as previously mentioned). These servers manage invisible processing. Activate VPSs during dormant timeframes. Assign them to internal breasoning operations. Back up logs across eras.
60. Thinking and PhDs are the main things to experience by thought; the rest are lifetime points (can be experienced in order or ahead of time). This prioritisation supports timeless excellence: catalogue potential lifetime events, reorder them based on study cycles, and time travel to their most significant moments.

61. The immortal took breaks, holidayed, wrote and programmed while working. I planned the academics needed with time for the education institution. I helped the bots be human with enough breasonings, helped their time travel and prepare for academia with enough breasonings, and automated their daily work. The bots were born and cared for with enough breasonings for conception, childhood and life (with hundreds of high distinctions with 10 high distinctions in them, requiring a fast way of generating specific, relevant and fun sentences and algorithms), helped them with academia with ten specific high distinctions per assignment, not including the total needed for Honours, Masters and PhD and helped them time travel to find a suitable PhD solution and complete the necessary breasonings. The human bots completed daily work at the institution, and their thoughts were found using a script. The daily work involved time travelling to breason out enough breasonings to meet professional requirements.
62. The immortal wrote many volumes about ideas. I used time travel in Academia to give myself more time to complete the work. I went back in time and completed the work, giving me enough breasonings for my goal at the correct standard (hand-written in enough time) with enough of them (written over the) years, not weeks). I took time to space out writing and writing in a more considered manner. I wrote more over a longer time, not rushing and completing the task.
63. The immortal discreetly found the names of texts, people who knew about or wrote these which, for example, could solve a cholera outbreak by using an active ingredient, for example, Chinese herbs, to fight the disease. I used time travel in Academia to find better solutions. I determined that the critical question was unanswered at the present time. I searched history for examples of the problem being solved. I searched for appropriate solutions. I changed my language when I found the correct solution.
64. The immortal achieved their specific goal in life, having met their and others' expectations and was above satisfied. I suggestively dressed up in a gown to entice students to time travel in academia. By having better breasonings, they would have the advantage of better examination and understanding of a topic. And by having enough breasonings, they could meet professional requirements and feel like they had comprehensively answered the question. They could publish and achieve the goals of the University with enough high-quality breasonings, including the careers of the University and live a scholastic lifestyle.
65. The immortal combined the speed app mockup tool with Starlog, which generated code from specs. I developed a Starcard (like a generative version of Hypercard) visualiser that combines a chatbot that asks, "Would you like the Connect Four game to be a desk-accessory style, 3D, or..." and allows describing, choosing and editing visual elements using drawing and painting editors. The advantage of a visual chatbot was that it allowed configuring projects using visual elements, which improved the usability and platform inter-compatibility of the software it produced. I combined the latest advantage of my chatbot, that it used shortcut commands such as "replace term" and "subterm with address" and allowed users to develop customised interface-related commands such as selecting a region with a particular shape in text or graphics or test or assess an algorithm or philosophy visually. Projects were saved in accessible text format, with customisable universal (programming language compatible) code and easily configurable (even with the chatbot) graphics and drawing elements.

66. The immortal pressed a button instead of entering the sentence. Starlog Prompt had a visual chatbot to enhance descriptions of algorithms or supplement algorithms with graphics. Starlog Prompt finds and finishes, famously from a tabula rasa (manual editing from prompts, giving shortcuts from previous work). It could be set up to automate all work, including using subterm with address and replacing term predicates to speed up tasks with previous predicates. These advantages enable visual or GUI elements to be created or included (subgraphic with address or replace graphic).
67. The immortal argued that the hardware and software were optimised as being simulated in Starlog, then Assembly Language. 3D Subgraphic with address represented models as hierarchical terms or library models that could be manipulated, changed, replaced, deleted, or added. It was new in that repeating parts of object descriptions could be searched for and altered. For example, multiple mass-produced paperbacks could be updated, reference readers’ interests, or individually respond to tired readers by recommending they retire or turn the light off. For example, I backed up and updated the robot’s software.
68. The immortal met time points about data and hardware. I accepted JASON as the initials of months to remember them and the livelihood of the computer’s function, reinforced by time points being met in the operating system and algorithms using Starlog, manual neuronets and assembly language. The robot Jason represented identifying a good time when performing an operation, turning preparation into performance by constantly running tests to ensure performance and that algorithms remained as sharp as possible. Visual Starlog ran and splayed the results of the constant improvement science algorithm. The graphical highlights intuitively prompted original, necessary conclusions.
69. The immortal used the neuronet to understand each part of the work task rather than simply using the system without understanding its meaning. I saved each primary work I completed and used each again if each or each adaptation was needed. In this way, I understood each part I used because I had written it. The system modified the content to be useful by applying ways of thinking that the person (just that person) could have got up to and would understand and approve. If there were assumptions for ways of thinking, these were given regarding the previous work.
70. The immortal explained why an idea was interesting in their journal. The system made assessment easier and more interesting for the students than the neuronet. They could play memory games, write creative algorithms, form a philosophy journal or work out games, such as finding commercially viable solutions given a time limit. Instead of copying and using neuronets to cheat, students were encouraged to form loose collectives to explore and examine their environment. Billions of dollars were spent on stimulating students’ highest aims to help them achieve their full potential as part of lifelong and stress-free learning.

Mathematical extensions of hyperregression, optimisation, the more detailed and more complex

71. The immortal found better discoveries, optimisations and new algorithms. I claimed that similar properties either existed or could be examined to exist like more and more knowledge being generated by applying parts of that stream of knowledge to itself. This knowledge included mathematical extensions of hyperregression, optimisation, and the more detailed and complex. If there were a known limit, it would likely be there because of examination and could be critically examined or broken. Current techniques or scientific advances might determine these extensions and must be discovered to contribute to solving a societal problem, such as resource scarcity, overpopulation, economics, medicine, or space travel.
72. The immortal discovered that quantum computers use superpositions of physically simulated particles to find previously worked-out solutions. Hyperregression, a possible improvement on regression, a statistical technique designed for local times and places, may be superseded by technology advancements and the demand for performance improvements. For example, optimised (simulated) quantum computers may improve on single-photon quantum computers and regression. Tachyon or x-ray quantum computers with optimised (or simulated or manifested) circuits may improve on these. Simulated (manifested) circuits exist in a physics simulation on a high-speed computer.
73. The immortal reduced the instructions to a single or no instructions. I found further optimisations for a random pair of computations, or a chain of them, or found the optimisation based on chemistry, physics, electronics, and computer science, including quantum or neurooptimisations. The quantum optimisation was the HDC running in 0 or negative time. Neurooptimisation is convergence, correlation, or optimisation. A correlation was that if there was a viable function to run to optimise the computation (optimising a previous step), it was.
74. The immortal detailed details to find relevant new properties. I found more detailed versions of reality. I attributed 800 Upasana sutras to a quantum particle, which was conscious and could imply high-quality imagery. If it had the confidence (assuming human consciousness pretending to be it), it could reveal details about its world, properties and history. Mind reading could be split into periods and interactions with other particles in recorded objects. Perhaps an emergent behaviour in this interaction existed in a group of subatomic particles when acting on related objects or particles.

75. The immortal wrote algorithms for each Text-to-Breasoning application and sped them up by uploading them to the quantum box. I found more detailed realities and theories than already existed. I found the finest known particles and the highest resolution knowledge of their constitution, and worked out whether these subparts had further subparts. Alternatively, I wrote connections, properties and algorithms about these levels of reality. By increasing scientific knowledge about reality, I furthered science and found instruments and readings to develop discoveries with critical uses.
76. The immortal used the Higher Dimensional Computer (HDC) for small particle simulations, the quantum internet and simulated spacetime travel. I found or programmed the necessary complexities for systems. I wrote about optimisations, new physical systems, and self-adapting or conscious systems. The quantum operating system for the HDC compressed years of computation into seconds, and the mind read the solution from an instance in an artificial dimension. By thinking of complex thoughts more clearly, these thoughts could be processed and work made more straightforward.

75. The immortal wrote algorithms for each Text-to-Breasoning application and sped them up by uploading them to the quantum box. I found more detailed realities and theories than already existed. I found the finest known particles and the highest resolution knowledge of their constitution and determined whether these subparts had further subparts. Alternatively, I wrote connections, properties and algorithms about these levels of reality. By increasing scientific knowledge about reality, I furthered science and found instruments and readings to develop discoveries with critical uses.
76. The immortal used the Higher Dimensional Computer (HDC) for small particle simulations, the quantum internet and simulated spacetime travel. I found or programmed the necessary complexities for systems. I wrote about optimisations, new physical systems, and self-adapting or conscious systems. The quantum operating system for the HDC compressed years of computation into seconds, and the mind read the solution from an instance in an artificial dimension. By thinking of complex thoughts more clearly, these thoughts could be processed, and work made more straightforward.

77. The immortal selected its thoughts. I maximised my longevity in the simulation. I did this by researching, helping others and treating details as roles. I earned the role and had a 100% average for each body party with 16k breasonings each day (each dimension, time, or space). 100% meant correctness in caring for the people, including their spirituality.

78. The immortal was polite to everyone. I found the differences between helping bots as founders and managers. Bots needed to last longer in the education system, finally becoming immortal with the help of the simulation with 4*50 high distinctions, which contain their personality and ways. Founders found what would be inside the bot.
79. The immortal was well-organised and professional. Managers created the bots' thoughts and sometimes high distinctions, following rules. However, the founder ensured everything was positive, responsive and inclusive. The manager helped the bots perform their jobs and guided customers. The founder helped with high distinctions and was responsible for accreditation and spirituality.

80. The immortal could use various devices with varying battery life. The Starcard app finished jobs on different devices when a device shut off or became unavailable. It was mainly for specific Shell algorithms, such as Text to Breasonings, Grammar Logic, chatbots, shell scripts, Music Composer, or others that SSI could run. Alternatively, a helper algorithm could have its code inserted or automatically inserted to initialise, enter a cycle or finish, with output types being memory, file or accumulated memory or file. There was a queue and a list of devices, and the output could be moved back to the first device when available or distributed over the devices.
