["Green, L 2022, <i>Immortality 11</i>, Lucian Academy Press, Melbourne.","Green, L 2022",1,"Immortality 11

1.  I needed to conduct myself to operate the business professionally.  I asked the government for financial assistance.  I was already making a certain amount.  With the grant, I could achieve more goals.  It helped with wages and costs.
2.  I made it clear that experts should teach philosophy.  Before this, I teleported objects between universes.  To do this, I wrote my philosophy.  I stored it in the next room.  It saved trouble; it was written up and protected.
3.  The founder followed simple steps to found the Academy.  To do this, I helped an Academician start a new company.  Before this, I chose the founder.  It was an educational institution (school or tertiary institution).  The founder was good at keeping things simple and agreed with the culture.
4.  The founder or a sponsor had to pay for initial costs.  The founder saw a lawyer about the proper company structure.  The lawyer helped them set up the company.  The lawyer helped with setting up financial systems.  Also, the finance manager helped.
5.  I had the health benefits of the simulation while defining parts of the world.  I used this to hold the MBA's hand.  I almost became an MBA student.  I was an MBA student.  I mind-read myself and the people around me, time travelling between people.
6.  I was happy and enjoyed simplifying courses.  First, I studied business and medicine at the master's level and worked out how to conduct myself professionally.  I also studied education at the master's level before this to help myself perform better in academia and industry.  The business enabled me to earn enough money for future degrees without much effort and satisfied other simulation requirements (like the world, but different because I could remain healthy and use the money for my needs).  The medicine helped me realise that the simulation and the world were the same and that my character was me.
7.  The people whose parents I had helped and who were interested in specific industries from their birth date helped by developing their ideas.  They prepared to create University, requiring 250 breasonings and 250 algorithms per assignment.  I started with myself and my living friends.  I prepared for goals and studied.  I inspired people and built institutions, reading the times and Indian horoscopes and helping with people's ideas.
8.  There was sometimes more than one assignment in six months.  More critical tasks required 500 breasonings and 500 algorithms.  I could develop 4*50 As of breasonings in six months.   While studying, I could write 0-16 algorithms per day.  With other algorithms, I could write 4*50 algorithms in six months.
9.  My father walked around unchanged; his latest character was the mirror (something similar had happened to me), which was harmless.  I supported each sentence I wrote with (a book of) good reasons.  I wrote many philosophies.  I wrote algorithms for each philosophy.  Is it my mother from another universe?  Have I met mirror-me?
10.  Educators could freely use the philosophy.  I helped someone salvage my philosophy.  They uncovered the blog years afterwards.  Before this, I transcribed and expanded my texts.  I also expanded other texts, exposing the algorithm and then writing the algorithm.
11.  I wrote down all my ideas, and an algorithm helped later.  I helped someone else write on my texts.  I detailed and developed algorithms for the details for the text.  The lecturer did the same.  The student also did this.
12.  I wondered if immortal Jesus had meditated and written on his thoughts.  Someone else had free use of my texts.  They had a license to be changed and distributed with the license, there was a disclaimer, and they could sell them.  I experienced the will of God to open meditation centres that combined breasonings, writing and computers with meditation.  I simplified the courses and made them more appealing.
13.  The Academy supported work involving Lucianic Meditation (LM).  The Academy gave my family royalties from the texts, or the Academy wrote texts influenced by my texts.  The Academy helped support the family financially through its work.  Alternatively, the Academy cited my texts.  Merchants sold my texts.
14.  I helped the CEO of LM.  This help enabled the CEO to open the LM office with an email, address, and bank details.  They asked whether they could use the texts.  They operated the world affairs centrally.  There was a board.

15.  The founder needed enough money to start an office, and the texts needed enough reasons to be chosen.  The founder took out a loan or saved investments until he had enough money or interest to pay for office or web costs.  I paid for accreditation costs.  People joined up because more people joined up.  The viable customers seemed to find it out, and I learned how to increase computer science to be simple.
16.  I swore by; preparing for sales only takes a month, does it?  To start, someone used or became inspired by my texts.  The next step is to give the mental state 50 As.  The person has 50 As.  The sale or desired action has 50 As.
17.  They used all of the texts, including meditation.  Can they use all of the texts, as long as the writer has done them up in this way?  Yes, they can.  I worked on neural networks to do this.  I had medicine for them.
18.  I invented a complex version (with a second perspective) if there wasn't one.  Or I left my philosophy's terminology as it was.  However, there was a version that had a simple adumbration.  I echoed this technique in computer science.  I explored and then simplified the idea.
19.  I sensed that my mother, through the bot, wanted reality.  I recommended immortality to those with terminal illnesses.  Immortality froze my age.  I recommended it to someone who didn't mind leaving their friends behind and living with bot versions of them.  The meditator could come back to the world as another person.
20.  I closed my business (or kept it open to make money in my simulation), and someone else opened another company.  This other person was open to making money.  I helped by writing, developing ideas and business openings.  I also found that thoughts attracted customers.  Enough thoughts were necessary.
21.  I employed Jyotish (Vedic Indian astrology) to tell when to do specific deals.  I determined what job to do (computer engineering). Then, I decided when to open my business.  I tried writing a computer science A for the first time, which had ten algorithms.  I expanded these ten algorithms.
22.  Business was a desirable conclusion for meditators.  I recommended when future business people/doctors in the business should be conceived/born.  I manually fed people computer science thoughts using Jyotish.  Using Jyotish could also be done in philosophy or business.  With Jyotish, I could research working in areas outside my main interests.
23.  I wrote texts supporting the future university.  I wrote the texts.  I checked they were simple and functionally differentiated.  I checked that they could operate as areas of study.  I found detail algorithms one degree of freedom away from the conclusion (i.e. it had a key term in common with it).
24.  I labelled the neural network for the idea a financial product.  To start, someone else organised money for the business.  I helped by investing money in assets.  I also researched tours.  In addition, I planned the meetings.
25.  Someone else toured countries about LM.  They started by choosing the countries.  They also chose the cities.  In addition, they organised meetings.
26.  At the start of the subject, I introduced myself and gave my background.  I helped each involved person one at a time.  I profiled the people's strengths and aims.  Maintaining a profile was also necessary for academia.  The lecturer could get to know the students and help with their goals.
27.  I planned work for each person.  I moved around and helped while others stayed in place.  I explained I was giving a second meaning but was serious about investigating immortality.  I took care of each person.  I switched on immortality points each day, increasing my longevity.
28.  I sketched, connected and discussed business decisions.  I had As, Bs and Bs to Bs and Jyotish verification of business decisions.  I wrote As (essays) about each thought I had.  I explored the perfection or algorithm for each idea to critically examine it. Finally, I checked that the decision was on the correct date, involved the right people and in the right direction.
29.  I completed the algorithms by customising them.  The business examined my algorithms.  A proposed principle research arm of the company developed my philosophy algorithms.  I described the differentiated functions in the specification. Finally, I determined whether the different interpretations were valid.
30.  I taught medicine to patients to help them answer their questions.  The business conducted research into Medicine.  I considered examining the medical benefits of Chinese objects.  As meditation was necessary, I investigated whether spiritual medicine was necessary.  As education required 4*50 As in education and the department, medicine required 4*50 As in business and medicine (and education).
31.  I worked out how to conduct myself professionally and studied before seeing the Jyotish astrologer.  I could already start writing critical knowledge down and applying it.  I used education and business knowledge to conduct myself professionally.  I studied education and business.  The Jyotish astrologer helped me determine when I should pursue specific business inputs and outputs.
32.  I drafted a business analysis report with pros and cons, with research on them.  To investigate possible cons, I wrote a 4*50 Bs and Bs to Bs generator for business decisions.  I began by examining company data.  I also analysed external data. As a result, I acted with 70% knowledge and avoided mistakes.
33.  I wrote Bs and Bs to Bs to immortality (to uncover problems and solutions, such as catching and objecting to blocks and writing enough to cover for Bs and Bs to Bs).  Instead of writing critical content, I wrote enough positive content.  I explained that immortality used future technologies available in our time.  As well as maintaining one's health, it gave time to finish the backlogs of work.  I could finish the workloads quickly to achieve fame and move forward later.
34.  Text to Breasonings created a spiritual \"cloud\", possibly with infinite breasonings due to the algorithm.  I supported Text to Breasonings with my company (where Text to Breasonings helped users earn high distinctions with 80 breasonings, or x, y and z dimensions of objects). As a first step, I wrote 4*50 As for Text to Breasonings to interact with the brain through meditation. Next, I wrote 4*50 As for Text to Breasonings to interact with the brain medically. Finally, I wrote 4*50 As for Text to Breasonings to help explain breasonings educationally.
35.  I agreed with the idea that a breasoning was a universe of wonder.  The Text to Breasonings algorithm involved the company working on imagery and finding images from the future.  The data the user entered was all the data that was required.  Each breasoning contributed a part of an image.  Two-hundred and fifty breasonings formed one coloured region or an image.
36.  Meditation helped control involuntary processes voluntarily.  This ability was part of supporting meditation with my company.  I wrote 4*50 As about meditation.  Each teacher needed to understand these As.  Meditation kept things moving and removed blocks.
37.  I exercised regularly and avoided heart disease.  Meditation involved the company taking care of ideas and finding out imagery from the future.  It found out about people and gave As.  It was given As from the future and helped with them.  I discovered different operations the meditator underwent as a result of meditation, from keeping things moving to immortality.

38.  I could run the app on the site with the processors.  I converted Prolog to Javascript.  First, I converted Prolog to C.  Then, I converted C to Javascript.  I changed int x; to var x;, int xs[n]; to var xs = [];, printf(...) to console.log(...) and int f (int x) {... return y;} to function f (x) {... return y;}.
39.  Garbage collection deleted finished predicates.  I turned garbage collection on or off with a flag.  Garbage collection replaced similar values with a symbol and expanded these if necessary later.  Garbage collection reduced the memory used.  It sped up computation because of this.
40.  I added auto-mutexes when multithreading (to List Prolog and State Saving Interpreter).  On another topic, I separated data structures by their function.  I labelled each choice point a \"choice point\".  I wrote the type of entries that stacks could have.  I accounted for these when searching for choice points.
41.  List Prolog enabled my chatbot to be programmed from one file and be displayed on several pages, for example, asking for information to help answer a question with findall.  I did this as part of writing a chatbot API with findall in List Prolog.  I did this by writing the code in List Prolog. Then, I converted it to Prolog. Finally, I added commands to make this List Prolog code converted to Prolog code work in Prolog.
42.  I started multiple companies, which I needed to do with my resources (time, money and As).  As part of this, I wrote philosophy as finance products.  First, I wrote philosophy in terms of computer algorithms. Then, I organised my party to pay in breasoning currency.  I became interested in infinite knowledge and using my neurons.
43.  I copied the receipt.  I made money from investments.  I thought about what I had an interest in.  I invested in the first viable products.  I replicated success (saved time and effort).
44.  I wrote the functional decomposition of algorithms in VET sales.  I did this to attract investors.  I experienced Vocational Education and Training (VET) in computer science to plan for this.  I wrote the VET A for the computer science assignment using this knowledge.  The students bought the course for similar reasons.
45.  I slotted old and new research frontiers about algorithms into ontologies (for example, breasonings as medicine).  Separately, I developed Lucianic Meditation (LM) as a social business (I researched the departments of others' algorithms).  I also wrote the puzzle table.  I wrote the secret level password. Finally, I changed my algorithms to web databases.
46.  I thought of accounting for objects and finance from or for the outside in business.  To do this, I programmed with functional differentiation as accounting.  I started with the main idea.  I perfectly programmed constituent parts and their parts. Then, I redrafted them, differentiating more specific functions, for example, keeping [\"a\"] not `a' in Prolog grammars, where `a' became an inexplicable number in code.
47.  I wrote combinations that were famous about business.  I wrote about my philosophy.  I helped others write about my philosophy.  I wrote each algorithm and wrote about them.  Institutional writing (with famous combinations) and vocational writing (with breasoning currency as functionalism) were both necessary, and 
48.  I wrote quality policies for software and organised helper algorithms.  Politics determined the structure of its offering to the world and had uniform policies.  I noticed \"a\" became 'a' in [\"a\"] in grammars.  I surmised that the interpreter stored strings and atoms in the same way.  The interpreter stored strings and atoms as strings.
49.  I checked the documents against pop songs and researched computer-written essays.  I prepared to start a political party.  The party's philosophies helped form LM.  They were better organised, were at the start and defined common lines in the organisation.  I checked them with As and Jyotish.
50.  The simplified essays were more easily connectable to other philosophical ideas.  The party completed an area of study list with a certain number of students from the academy.  First, the students completed the essays. Then, I converted the articles and their details to a critically analysable form.  This form was breasoned out by computer.

51.  I played a game of symbols and intersectionality.  I rewrote the philosophy without spiritual or computational terms.  Text to Breasoning achieved this with an object dictionary.  I replaced spirituality with evidential reasoning.  I replaced computational words with uses.  Text to Breasoning may need more specific replacements.
52.  I kept one different term with an A in the department.  Before this, I labelled words as computational or spiritual.  I entered alternatives for these words.  I proofread the altered texts.  I fixed any errors.
53.  I had a software-architectural style (met professional requirements at each point).  I contributed to this by breasoning 50 As for politics in the morning.  I changed this to 50 As for details.  I wrote ideas about ideas.  I wrote new functional algorithms (string to list with C-style array trees as lists) or those of new philosophies (adding breasonings to sentences' algorithms).
54.  In the end, the party aimed for food and power.  I established the Lucianic Natural Law Party.  Text to Breasonings had 50 As.  Daily Regimen had 50 As.  People aimed for space and time travel.
55.  The party members helped the students think of general ideas.  I helped by mind-reading practice party members.  Later, I placed the party software code in the repository.  These party members had 50 As.  After mind-reading a separate person thinking of a holding pattern, the party members were mind-read thinking of fast 50 As.
56.  The professor wrote a secondary text. Again, the people agreed with (updated) Lucian Green's meditation philosophies.  They connected them to research.  They connected them to the news.  They connected them to journalism.
57.  University and politics had secular, simplified texts.  I wrote an algorithm that replaced spiritual and computational terms.  Occasionally there may be one spiritual term per department.  Or, there may be one examined computational term.  I explored these words in terms of words, not including spiritual or computational terms.
58.  I wrote an algorithm that applied term replacements to academy texts.  The algorithm checked each word.  If it had a replacement, the algorithm replaced it.  I had previously entered whether the term was spiritual or computational and what its replacement was.  I kept a copy with the original words to expand.
59.  Students encountered evaluability in texts and terms. As part of this, I wrote a spiritual and computational termless \"Grammar Logic\" argument for each spiritual or computational term. As part of this, I generated word lists for each spiritual or computational term. Second, I ran the \"Grammar Logic\" algorithm to inspire an argument about each term. Finally, I deleted the spiritual and computational words from the rest of these arguments.
60. 250 breasonings explained ideas or quotes that seemed self-explanatory or that I could further examine.  I wrote 250 breasonings for each spiritual or computational term instance.  Two hundred and fifty breasonings met the professional standard for imagery, 100% and effectiveness.  Two hundred and fifty breasonings for a spiritual term helped explore the idea behind the spiritual term.  Two hundred and fifty breasonings for a computational term examined the idea, providing a model solution or essay about the algorithm if the academy assessed the algorithm.

61.  I ran the program to find the database website.  I did this to use State Saving Interpreter for accounting.  Using SSI in this way was part of database accounting.  This database was a set of tables.  I wrote balance verification, etc. algorithms with State Saving Interpreter.
62.  The total was always the same.  As I could check sums of rows against totals of columns, I could check these against totals of layers.  I also found four-dimensional totals.  In addition, I found higher dimensional counts.  They were from other times and places.
63.  The functionally decomposed algorithms connected to the new algorithm.  There was a bank account of breasoning currency.  Access to it could be locked using a database.  The philosophy was like the bar codes.  Enough breasonings completed the details.
64.  The executive summary was detailed enough but well-written.  This summary contained limitations.  Later, I cut out each sentence except the main point.  I then simplified the grammar.  I also simplified the word's readability.
65.  I produced a report.  This report had a type and purpose.  I could compile its sections automatically.  I included only the relevant information in it.  The report was correct by the company and personal aims.
66.  The API did the work. First, I needed to check its progress.  It compiled the data.  It analysed whether this was relevant first by going down and across levels. Then, it checked against other teams horizontally and vertically.
67.  I improved the presentation's structure.  I manipulated the data by using a particular file format.   I transformed (moved data).  I analysed (used ledger tools).  I also blew up details, describing them.
68.  I inserted statistical algorithms in SSI.  They detected correlations.  They could help make decisions, such as everything to do with sales.  I included machine learning algorithms in databases.  It automatically identified and preprocessed the data.
69.  The website could run code in SSI, then online using SSI Web Service.  I replaced functions with algorithms (logic) in the database.  These algorithms were recursive.  They could also reuse parts of other algorithms.  I decomposed, identified and optimised their functions.
70.  I edited the database code.  This code was in a single file.  In addition, I entered the report data.  I edited the data using the database in SSI.  An algorithm could generate the database code (the look and content of input and output pages).
71.  I prevented opening accounts for unsavoury prospects.  I did this by stopping illegal activity by monitoring user activity. First, I found the negative term. Then, I checked whether it was warranted.  If necessary, I gave a warning or suspended the account.
72.  The data was locked to others until a user completed it or rolled it back (I undid it).  I did this as part of locking the database.  First, the client paid. Then, the system recorded this payment.  The database only registered the transaction if the user had paid it, and another user or session could not change it.
73.  I only used the graph if necessary.  I explained the chart.  The type of graph was chosen, with advantages and disadvantages over other types of graph.  The vital information was at the top of the page.  There were blow-up details, lines to details or radial or visually appealing charts.
74.  I enabled sales, bots and education with 4*50 As.  I wrote As, not necessarily relying on neural networks in philosophy.  I wrote 50 As.  When I had written 4*50 As, this meant Bs, and sometimes algorithms were unnecessary.  I could sell and use the 4*50 As as a PhD text.
75.  I wrote functionally decomposed sentences and their algorithms.  This stage was part of the long effort to finish the project.  I wrote an algorithm to simplify algorithms into algorithms with a single function.  I described this algorithm with a sentence.  I experimented with joining these algorithms together and then rewriting the sentence.
76.  I paraphrased the algorithm.  Paraphrasing the algorithm was part of writing new As.  I did this by converting functionally decomposed algorithms and sentences into new knowledge.  Then, I rejoined them differently.  If a rejoined algorithm did the same thing and was more straightforward, I replaced another algorithm with it.
77.  I paraphrased a certain number of words per sentence and simplified the grammar.  Then, I wrote new As with ontologies of sentences.  To do this, I found the category that contained the word in the sentence.  Then, I found another word in this category. Finally, I rewrote the sentence with the new term.
78.  I paraphrased the algorithm.  I did this by writing the word.  Next, I noted its synonym.  In this way, I changed the word to this synonym.  I sometimes optimised by bringing forward values to equals statements.
79.  I collected and reused the intermediate algorithms.  I paraphrased the algorithm connections.  The algorithm connection was between two algorithms, for example, two parts going well together.  It could be a more general version of another algorithm.  This algorithm dealt with any rather than a specific type.
80.  Later, I wrote more algorithm connections using the same patterns.  The goal was to find links where there were none. Then, if an algorithm fitted, I used it.  Linking in this way generated more algorithms and inspired functional optimisation.  Functional optimisation reduced predicates to their functions and ran these one at a time.
"]