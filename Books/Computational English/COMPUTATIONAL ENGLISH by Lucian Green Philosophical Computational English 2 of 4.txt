["Green, L 2021, <i>Philosophical Computational English 2 of 4</i>, Lucian Academy Press, Melbourne.","Green, L 2021",1,"COMPUTATIONAL ENGLISH
by Lucian Green
Philosophical Computational English 2 of 4

11.    I prepared to wrote new philosophical algorithms in academia.  I did this by stating that the self should connect a sentence's part with the other's other part of that sentence.  First, I wrote the start, middle and end of the sentence in the row headings.  Second, I wrote the start, middle and end of the sentence in the column headings.  Third, I connected each combination of pairs of sentence parts.  In this way, I prepared to wrote new philosophical algorithms in academia by stating that the self should connect a sentence's part with the other's other part of that sentence.

12.   I prepared to determine the philosophical complexity (longest chain, including expanded recursion) of the algorithm.  I did this by stating that the self should expand his or her idea into the other's idea algorithm.  First, I thought of the overall function of the algorithm.  Second, I thought of the individual predicates of the algorithm.  Third, I simplified each predicate into two parts going well together.  In this way, I prepared to determine the philosophical complexity (longest chain, including expanded recursion) of the algorithm by stating that the self should expand his or her idea into the other's idea algorithm.

13.    I prepared to place a map of the shop in the map of the city.  I did this by stating that the self should write an ontology that scales the complexity of algorithm from simple to as complex as the other requires, e.g. by making data structures more detailed.  First, I drew a square.  Second, I divided it into quarters.  Third, I divided each quarter into quarters.  In this way, I prepared to place a map of the shop in the map of the city by stating that the self should write an ontology that scales the complexity of algorithm from simple to as complex as the other requires, e.g. by making data structures more detailed.

14.   I prepared to verify that the algorithms had the same qualities.  I did this by stating that the self should find similarities of ontologies in the other's five algorithms.  First, I observed that the ontologies of the five algorithms had the same branching point.  Second, I observed that the ontologies of the five algorithms had the same length.  Third, I observed that the ontologies of the five algorithms had the same number of items in total.  In this way, I prepared to verify that the algorithms had the same qualities by stating that the self should find similarities of ontologies in the other's five algorithms.

15.   I prepared to connect differences in ontologies of different algorithms of the other.  I did this by affirming that the self should find differences in ontologies of different algorithms of the other.  First, I observed that the ontologies of the different algorithms had a different number of levels.  Second, I observed that the ontologies of the different algorithms had a different number of items per level.  Third, I observed that the ontologies of the different algorithms had a different item type at the same position.  In this way, I prepared to connect differences in ontologies of different algorithms of the other by affirming that the self should find differences in ontologies of different algorithms of the other.

16.   I prepared to compress algorithmic complexity.  I did this by stating that the self should write ontologies of the other's algorithms' parts.  First, I wrote the structure of the algorithm's parts (functions, or Prolog predicates).  Second, I wrote the order of the groups of commands in each predicate.  Third, I wrote the command types in each predicate (call, recursive or mathematical).  In this way, I prepared to compress algorithmic complexity by stating that the self should write ontologies of the other's algorithms' parts.

17.   I prepared to examine the meaning of the ontologies of the data structures.  I did this by writing that the self should write ontologies of the other's algorithms' data structures.  First, I wrote in the ontology that the algorithm's data structure was a point.  Second, I wrote in the ontology that the algorithm's data structure was a line.  Third, I wrote in the ontology that the algorithm's data structure was a tree.  In this way, I prepared to examine the meaning of the data structures' structures by writing that the self should write ontologies of the other's algorithms' data structures.

18.   I prepared to read the book.  I did this by turning to the right page.  First, I opened the book.  Second, I turned the pages.  Third, I repeated this until I had I had found the correct page.  In this way, I prepared to read the book by turning to the right page.

19.    I prepared to read the page that fell open.  I did this by turning to the page that fell open.  First, I rested the book edition on its spine.  Second, I allowed the book edition to fall open.  Third, I observed the page that fell open.  In this way, I prepared to read the page that fell open by turning to the page that fell open.

20.  I prepared to read the chapter.  I did this by turning to the first page.  First, I opened the volume.  Second, I turned the title page.  Third, I turned to the first page.  In this way, I prepared to read the chapter by turning to the first page.

"]